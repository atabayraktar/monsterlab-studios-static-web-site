"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/hooks/useLocomotiveScroll.js":
/*!******************************************!*\
  !*** ./src/hooks/useLocomotiveScroll.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLocomotiveScroll: function() { return /* binding */ useLocomotiveScroll; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n\nconst useLocomotiveScroll = ()=>{\n    _s();\n    const [scroller, setScroller] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let scroller;\n        __webpack_require__.e(/*! import() */ \"node_modules_locomotive-scroll_dist_locomotive-scroll_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! locomotive-scroll */ \"./node_modules/locomotive-scroll/dist/locomotive-scroll.esm.js\")).then((locomotiveModule)=>{\n            let newScroller = new locomotiveModule.default({\n                el: document.querySelector(\"[data-scroll-container]\"),\n                smooth: true\n            });\n            setScroller(newScroller);\n        });\n        return ()=>{\n            if (scroller) scroller.destroy();\n        };\n    }, []);\n    return scroller;\n}; /* new ResizeObserver(() => scroller.update()).observe(\r\n  document.querySelector(\"[data-scroll-container]\")\r\n); \r\n*/ \n_s(useLocomotiveScroll, \"6z4VjkQlwx876L2wzf2F/8BzDos=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvdXNlTG9jb21vdGl2ZVNjcm9sbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtDO0FBQ0Q7QUFDMUIsTUFBTUUsc0JBQXNCOztJQUNqQyxNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR0gsK0NBQVFBO0lBQ3hDRCxnREFBU0EsQ0FBQztRQUNSLElBQUlHO1FBQ0osb1BBQTJCLENBQUNFLElBQUksQ0FBQyxDQUFDQztZQUNoQyxJQUFJQyxjQUFjLElBQUlELGlCQUFpQkUsT0FBTyxDQUFDO2dCQUM3Q0MsSUFBSUMsU0FBU0MsYUFBYSxDQUFDO2dCQUMzQkMsUUFBUTtZQUNWO1lBQ0FSLFlBQVlHO1FBQ2Q7UUFDQSxPQUFPO1lBQ0wsSUFBSUosVUFBVUEsU0FBU1UsT0FBTztRQUNoQztJQUNGLEdBQUcsRUFBRTtJQUNMLE9BQU9WO0FBQ1QsRUFBRSxDQUVGOzs7QUFHQTtHQXJCYUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2hvb2tzL3VzZUxvY29tb3RpdmVTY3JvbGwuanM/MmJmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuZXhwb3J0IGNvbnN0IHVzZUxvY29tb3RpdmVTY3JvbGwgPSAoKSA9PiB7XHJcbiAgY29uc3QgW3Njcm9sbGVyLCBzZXRTY3JvbGxlcl0gPSB1c2VTdGF0ZSgpO1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBsZXQgc2Nyb2xsZXI7XHJcbiAgICBpbXBvcnQoXCJsb2NvbW90aXZlLXNjcm9sbFwiKS50aGVuKChsb2NvbW90aXZlTW9kdWxlKSA9PiB7XHJcbiAgICAgIGxldCBuZXdTY3JvbGxlciA9IG5ldyBsb2NvbW90aXZlTW9kdWxlLmRlZmF1bHQoe1xyXG4gICAgICAgIGVsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtc2Nyb2xsLWNvbnRhaW5lcl1cIiksXHJcbiAgICAgICAgc21vb3RoOiB0cnVlLFxyXG4gICAgICB9KTtcclxuICAgICAgc2V0U2Nyb2xsZXIobmV3U2Nyb2xsZXIpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBpZiAoc2Nyb2xsZXIpIHNjcm9sbGVyLmRlc3Ryb3koKTtcclxuICAgIH07XHJcbiAgfSwgW10pO1xyXG4gIHJldHVybiBzY3JvbGxlcjtcclxufTtcclxuXHJcbi8qIG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiBzY3JvbGxlci51cGRhdGUoKSkub2JzZXJ2ZShcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtc2Nyb2xsLWNvbnRhaW5lcl1cIilcclxuKTsgXHJcbiovXHJcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZUxvY29tb3RpdmVTY3JvbGwiLCJzY3JvbGxlciIsInNldFNjcm9sbGVyIiwidGhlbiIsImxvY29tb3RpdmVNb2R1bGUiLCJuZXdTY3JvbGxlciIsImRlZmF1bHQiLCJlbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNtb290aCIsImRlc3Ryb3kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/hooks/useLocomotiveScroll.js\n"));

/***/ })

});